{"version":3,"sources":["00_config.js","00_loaders.js","01_EventoDummy.js","Cohete.js","GameEngine.js","GameEngineDataIni.js","Jugador.js","Posicion.js","PosicionRC.js","ResultadoOpe.js","Submarino.js","z_app.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["/* @flow */\r\n\r\nconst gameConfig = {\r\n    size: 800,\r\n    numSubmarinos: 3,\r\n    resources: {\r\n        imgMar: null\r\n    }\r\n};\r\n","\r\nfunction loadImage(url) {\r\n    return new Promise(resolve => {\r\n        const image = new Image();\r\n        image.addEventListener('load', () => {\r\n            resolve(image)\r\n        });\r\n\r\n\r\n        image.src = url;\r\n    })\r\n}\r\n\r\n\r\n\r\nfunction loadBGMar(){\r\n    return loadImage('/img/mar1.png')\r\n}","let EventoDummy = {\r\n\r\n};","class Cohete {\r\n\r\n    constructor(posicionIni) {\r\n        this.posicionIni = posicionIni;\r\n        this.velocidad=new Posicion(0,0,0)\r\n        this.posicion=null;\r\n    }\r\n\r\n    lanzar(posicionFinalRC, posicionFinal ) {\r\n        this.posicionFinal = posicionFinal;\r\n        this.posicionFinalRC = posicionFinalRC;\r\n\r\n    }\r\n\r\n    mover(){\r\n\r\n    }\r\n\r\n}","class GameEngine  {\r\n\r\n    constructor(jugadorLocal){\r\n\r\n    }\r\n}\r\n","class GameEngineDataIni {\r\n    constructor() {\r\n        this.size = null;\r\n        this.listaJugador=[];\r\n    }\r\n\r\n    setSize(size){\r\n        this.size=size;\r\n    }\r\n\r\n    addJugador(jugador){\r\n        this.listaJugador.push(jugador);\r\n    }\r\n\r\n    getResOpeIsValid(){\r\n        let isValid= true;\r\n        let listaMsg=[];\r\n\r\n        if(this.size===null){\r\n            isValid=false;\r\n            listaMsg.push('Size es null');\r\n        }\r\n\r\n        if(this.listaJugador.length<2){\r\n            isValid=false;\r\n            listaMsg.push('No hay jugadores suficientes');\r\n        }\r\n\r\n        if (isValid){\r\n            return FactoryResultadoOpe.OK();\r\n        }else{\r\n            return FactoryResultadoOpe.Error('Error de validacion', listaMsg);\r\n        }\r\n    }\r\n\r\n\r\n}","class Jugador {\r\n\r\n    constructor(indexCuadrante, listaSubmarinos) {\r\n        this.indexCuadrante = indexCuadrante;\r\n        this.id = parseInt(Math.random() * 100000);\r\n\r\n\r\n        this.getIsLocal = () => {\r\n            return indexCuadrante === 0;\r\n        };\r\n\r\n        this.listaSubmarinos = listaSubmarinos;\r\n        this.listaCohetes = [];\r\n\r\n        //asignar los submarinos al jugador actual\r\n        this.listaSubmarinos\r\n            .forEach(submarino => {\r\n                submarino.setJugador(this);\r\n            })\r\n        ;\r\n\r\n    }\r\n}\r\n\r\n\r\nconst factoryJugador = {\r\n    local: function () {\r\n        let listaSubmarinos = factoryListaSubmarinos.random();\r\n        return new Jugador(0, listaSubmarinos);\r\n    }\r\n};","class Posicion {\r\n\r\n    constructor(x, y, z) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n\r\n}","class PosicionRC {\r\n\r\n    constructor(r, c) {\r\n        this.r = r;\r\n        this.c = c;\r\n    }\r\n\r\n}","class ResultadoOpe {\r\n\r\n    constructor(isOk, msg, dataAdicional) {\r\n\r\n        this.getIsSuccess = function () {\r\n            return isOk;\r\n        };\r\n\r\n        this.getMsg = function () {\r\n            return msg;\r\n        };\r\n\r\n        this.getData = function () {\r\n            return dataAdicional;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nlet FactoryResultadoOpe = {\r\n    OK: function (data = null) {\r\n        return new ResultadoOpe(true, msg, data);\r\n    },\r\n    Error: function (msg, data = null) {\r\n        return new ResultadoOpe(false, msg, data);\r\n    }\r\n\r\n};","class Submarino {\r\n\r\n    constructor(posicionRC) {\r\n        this.posicionRC = posicionRC;\r\n        this.isActivo = true;\r\n        this.isCoheteListo = false;\r\n        this.jugador = null;\r\n        this.isSetJugador = false;\r\n    }\r\n\r\n    setJugador(jugador) {\r\n        this.jugador = jugador;\r\n        this.isSetJugador = true;\r\n    }\r\n\r\n    getPosicionRC() {\r\n        return this.posicionRC;\r\n    }\r\n\r\n    recibeImpacto() {\r\n        this.isActivo = false;\r\n        this.isCoheteListo = false;\r\n    }\r\n\r\n    lanzaCohete(fnCB) {\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nconst factoryListaSubmarinos = {\r\n\r\n    random : function(){\r\n\r\n        let lista = [];\r\n\r\n\r\n        while (lista.length < gameConfig.numSubmarinos) {\r\n            //agregar submarino\r\n\r\n            let r = Math.floor(Math.random() * 10);\r\n            let c = Math.floor(Math.random() * 10);\r\n\r\n            //buscar si se repiten\r\n\r\n            let numCoincidencias = lista\r\n                .filter(item => {\r\n                    return item.posicionRC.r === r && item.posicionRC.c === c;\r\n                })\r\n                .length\r\n            ;\r\n\r\n            if (numCoincidencias === 0) {\r\n\r\n                let posicionRC = new PosicionRC(r, c);\r\n                let submarino = new Submarino(posicionRC);\r\n                lista.push(submarino);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        return lista;\r\n    }\r\n};\r\n","\r\n'use strict';\r\n\r\nlet gameEngine=null;\r\n\r\nlet gameLoader = {\r\n\r\n    canvas: null,\r\n    ctx: null,\r\n    start: function () {\r\n\r\n        if (this.isTerminado) {\r\n            throw new Error(\"El loader ha termiando\")\r\n        }\r\n\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.width = gameConfig.size;\r\n        this.canvas.height = gameConfig.size;\r\n\r\n        let container = document.getElementById('container');\r\n        container.append(this.canvas);\r\n        this.ctx = this.canvas.getContext('2d');\r\n\r\n        Promise.all([\r\n                loadBGMar()\r\n            ]\r\n        ).then(([imgMar]) => {\r\n            //guardar los archivos cargados\r\n            gameConfig.resources.imgMar = imgMar;\r\n            this.reload();\r\n        });\r\n\r\n    },\r\n    reload:function(){\r\n\r\n        let jugadorLocal=factoryJugador.local();\r\n\r\n        gameEngine=new GameEngine( jugadorLocal);\r\n    }\r\n\r\n};\r\n\r\n\r\n"]}